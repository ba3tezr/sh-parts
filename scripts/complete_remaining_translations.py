#!/usr/bin/env python3
"""
Complete remaining translations with comprehensive dictionary
"""

import re

# Comprehensive translation dictionaries
AR_TO_EN = {
    # Technical/Model fields
    "last login": "ุขุฎุฑ ุชุณุฌูู ุฏุฎูู",
    "2FA enabled": "ุงููุตุงุฏูุฉ ุงูุซูุงุฆูุฉ ููุนูุฉ",
    "2FA secret": "ุฑูุฒ ุงููุตุงุฏูุฉ ุงูุซูุงุฆูุฉ",
    "car make": "ูุงุฑูุฉ ุงูุณูุงุฑุฉ",
    "car makes": "ูุงุฑูุงุช ุงูุณูุงุฑุงุช",
    "production start year": "ุณูุฉ ุจุฏุงูุฉ ุงูุฅูุชุงุฌ",
    "production end year": "ุณูุฉ ููุงูุฉ ุงูุฅูุชุงุฌ",
    "body type": "ููุน ุงููููู",
    "car model": "ููุฏูู ุงูุณูุงุฑุฉ",
    "car models": "ููุฏููุงุช ุงูุณูุงุฑุงุช",
    "category name": "ุงุณู ุงููุฆุฉ",
    "category name (Arabic)": "ุงุณู ุงููุฆุฉ (ุจุงูุนุฑุจูุฉ)",
    "parent category": "ุงููุฆุฉ ุงูุฃู",
    "icon class": "ุฑูุฒ ุงูุฃููููุฉ",
    "sort order": "ุชุฑุชูุจ ุงูุนุฑุถ",
    "part category": "ูุฆุฉ ุงููุทุนุฉ",
    "part categories": "ูุฆุงุช ุงููุทุน",
    "part number": "ุฑูู ุงููุทุนุฉ",
    "description (Arabic)": "ุงููุตู (ุจุงูุนุฑุจูุฉ)",
    "compatible models": "ุงูููุฏููุงุช ุงููุชูุงููุฉ",
    "default image": "ุงูุตูุฑุฉ ุงูุงูุชุฑุงุถูุฉ",
    "universal part": "ูุทุนุฉ ุนุงูุฉ",
    "parts": "ุงููุทุน",
    "Excellent": "ููุชุงุฒ",
    "Good": "ุฌูุฏ",
    "Fair": "ููุจูู",
    "Poor": "ุณูุฆ",
    "Salvage": "ููุฅููุงุฐ",
    "intake notes": "ููุงุญุธุงุช ุงูุงุณุชูุงู",
    "received by": "ูุณุชูู ุจูุงุณุทุฉ",
    "dismantled": "ูููู",
    "dismantled date": "ุชุงุฑูุฎ ุงูุชูููู",
    "vehicles": "ุงูุณูุงุฑุงุช",
    "image": "ุงูุตูุฑุฉ",
    "caption": "ุงูุชุนููู",
    "primary photo": "ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉ",
    "uploaded at": "ุฑูุน ูู",
    "vehicle photo": "ุตูุฑุฉ ุงูุณูุงุฑุฉ",
    "vehicle photos": "ุตูุฑ ุงูุณูุงุฑุฉ",
    "Address": "ุงูุนููุงู",
    "Financial": "ุงููุงููุฉ",
    "Additional": "ุฅุถุงูู",
    "Note": "ููุงุญุธุฉ",
    "Business": "ุชุฌุงุฑู",
    "business name": "ุงุณู ุงููุดุงุท ุงูุชุฌุงุฑู",
    "secondary phone": "ูุงุชู ุซุงููู",
    "address line 1": "ุณุทุฑ ุงูุนููุงู 1",
    "address line 2": "ุณุทุฑ ุงูุนููุงู 2",
    "state/province": "ุงููุญุงูุธุฉ/ุงูููุงูุฉ",
    "Superuser must have is_staff=True.": "ุงููุณุชุฎุฏู ุงูุฑุฆูุณู ูุฌุจ ุฃู ูููู is_staff=True.",
    "Superuser must have is_superuser=True.": "ุงููุณุชุฎุฏู ุงูุฑุฆูุณู ูุฌุจ ุฃู ูููู is_superuser=True.",
    "make name (Arabic)": "ุงุณู ุงููุงุฑูุฉ (ุจุงูุนุฑุจูุฉ)",
    "model name (Arabic)": "ุงุณู ุงูููุฏูู (ุจุงูุนุฑุจูุฉ)",
    "part name (Arabic)": "ุงุณู ุงููุทุนุฉ (ุจุงูุนุฑุจูุฉ)",
    "Location & Tracking": "ุงููููุน ูุงูุชุชุจุน",
    "Used - Excellent": "ูุณุชุนูู - ููุชุงุฒ",
    "Used - Good": "ูุณุชุนูู - ุฌูุฏ",
    "Used - Fair": "ูุณุชุนูู - ููุจูู",
    "discount %": "ูุณุจุฉ ุงูุฎุตู %",
    "Credit/Debit Card": "ุจุทุงูุฉ ุงุฆุชูุงู/ุฎุตู",
    
    # Theme names - bilingual, keep as is
    "ุงูุซูู ุงูุฃุฒุฑู ุงูููุงุฑู / Day Blue Theme": "Day Blue Theme / ุงูุซูู ุงูุฃุฒุฑู ุงูููุงุฑู",
    "ุงูุซูู ุงูุฃุฒุฑู ุงูุฏุงูู / Dark Blue Theme": "Dark Blue Theme / ุงูุซูู ุงูุฃุฒุฑู ุงูุฏุงูู",
    "ุงูุซูู ุงููุงุชุญ / Light Theme": "Light Theme / ุงูุซูู ุงููุงุชุญ",
    "ุซูู ุงูุฑูุงู ุงูุฐูุจูุฉ / Camel Dune Theme": "Camel Dune Theme / ุซูู ุงูุฑูุงู ุงูุฐูุจูุฉ",
    "ุงูุซูู ุงูุฒูุชู / Olive Sage Theme": "Olive Sage Theme / ุงูุซูู ุงูุฒูุชู",
    
    # Messages
    "ุชุญุฏูุซ ุฌุฏูุฏ ูุชุงุญ! ูู ุชุฑูุฏ ุชุญุฏูุซ ุงูุชุทุจููุ": "New update available! Do you want to update the app?",
}

EN_TO_AR = {
    "Superuser must have is_staff=True.": "ุงููุณุชุฎุฏู ุงูุฑุฆูุณู ูุฌุจ ุฃู ูููู is_staff=True.",
    "Superuser must have is_superuser=True.": "ุงููุณุชุฎุฏู ุงูุฑุฆูุณู ูุฌุจ ุฃู ูููู is_superuser=True.",
    "2FA enabled": "ุงููุตุงุฏูุฉ ุงูุซูุงุฆูุฉ ููุนูุฉ",
    "2FA secret": "ุฑูุฒ ุงููุตุงุฏูุฉ ุงูุซูุงุฆูุฉ",
    "make name (Arabic)": "ุงุณู ุงููุงุฑูุฉ (ุจุงูุนุฑุจูุฉ)",
    "model name (Arabic)": "ุงุณู ุงูููุฏูู (ุจุงูุนุฑุจูุฉ)",
    "category name (Arabic)": "ุงุณู ุงููุฆุฉ (ุจุงูุนุฑุจูุฉ)",
    "part name (Arabic)": "ุงุณู ุงููุทุนุฉ (ุจุงูุนุฑุจูุฉ)",
    "description (Arabic)": "ุงููุตู (ุจุงูุนุฑุจูุฉ)",
    "address line 1": "ุณุทุฑ ุงูุนููุงู 1",
    "address line 2": "ุณุทุฑ ุงูุนููุงู 2",
    "state/province": "ุงููุญุงูุธุฉ/ุงูููุงูุฉ",
    "Location & Tracking": "ุงููููุน ูุงูุชุชุจุน",
    "Used - Excellent": "ูุณุชุนูู - ููุชุงุฒ",
    "Used - Good": "ูุณุชุนูู - ุฌูุฏ",
    "Used - Fair": "ูุณุชุนูู - ููุจูู",
    "discount %": "ูุณุจุฉ ุงูุฎุตู %",
    "Credit/Debit Card": "ุจุทุงูุฉ ุงุฆุชูุงู/ุฎุตู",
    
    # Theme names
    "ุงูุซูู ุงูุฃุฒุฑู ุงูููุงุฑู / Day Blue Theme": "ุงูุซูู ุงูุฃุฒุฑู ุงูููุงุฑู / Day Blue Theme",
    "ุงูุซูู ุงูุฃุฒุฑู ุงูุฏุงูู / Dark Blue Theme": "ุงูุซูู ุงูุฃุฒุฑู ุงูุฏุงูู / Dark Blue Theme",
    "ุงูุซูู ุงููุงุชุญ / Light Theme": "ุงูุซูู ุงููุงุชุญ / Light Theme",
    "ุซูู ุงูุฑูุงู ุงูุฐูุจูุฉ / Camel Dune Theme": "ุซูู ุงูุฑูุงู ุงูุฐูุจูุฉ / Camel Dune Theme",
    "ุงูุซูู ุงูุฒูุชู / Olive Sage Theme": "ุงูุซูู ุงูุฒูุชู / Olive Sage Theme",
    
    "ุชุญุฏูุซ ุฌุฏูุฏ ูุชุงุญ! ูู ุชุฑูุฏ ุชุญุฏูุซ ุงูุชุทุจููุ": "ุชุญุฏูุซ ุฌุฏูุฏ ูุชุงุญ! ูู ุชุฑูุฏ ุชุญุฏูุซ ุงูุชุทุจููุ",
}


def translate_po_file(po_file_path, dictionary, language_name):
    """
    Translate empty msgstr using dictionary
    """
    
    with open(po_file_path, 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    changes = 0
    i = 0
    
    while i < len(lines):
        line = lines[i]
        
        # Look for msgid lines
        if line.startswith('msgid "') and i + 1 < len(lines):
            # Extract msgid text
            msgid_match = re.match(r'msgid "(.*)"', line)
            if msgid_match:
                msgid_text = msgid_match.group(1)
                
                # Check if next line is empty msgstr
                if lines[i + 1].strip() == 'msgstr ""':
                    # Look up in dictionary
                    if msgid_text in dictionary:
                        translation = dictionary[msgid_text]
                        lines[i + 1] = f'msgstr "{translation}"\n'
                        changes += 1
                        print(f"  โ {msgid_text[:50]}... โ {translation[:50]}...")
        
        i += 1
    
    # Write back
    with open(po_file_path, 'w', encoding='utf-8') as f:
        f.writelines(lines)
    
    return changes


def main():
    print("=" * 70)
    print("๐ Completing Remaining Translations")
    print("=" * 70)
    print()
    
    # Translate English file (AR to EN)
    print("๐ Processing: locale/en/LC_MESSAGES/django.po (Arabic โ English)")
    en_changes = translate_po_file('locale/en/LC_MESSAGES/django.po', AR_TO_EN, 'English')
    print(f"  โ Translated {en_changes} strings")
    print()
    
    # Translate Arabic file (EN to AR)
    print("๐ Processing: locale/ar/LC_MESSAGES/django.po (English โ Arabic)")
    ar_changes = translate_po_file('locale/ar/LC_MESSAGES/django.po', EN_TO_AR, 'Arabic')
    print(f"  โ Translated {ar_changes} strings")
    print()
    
    print("=" * 70)
    print(f"โ Total: {ar_changes + en_changes} translations completed")
    print("=" * 70)
    print()
    print("๐ Next step: Run 'python manage.py compilemessages'")


if __name__ == '__main__':
    main()
